# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Release && Deploy to GH Pages

on:
  pull_request:
    branches: ["main"]
    types: ["opened", "synchronize", "edited", "closed"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  semantic-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: PaulHatch/semantic-version@v5.4.0
        id: generate-version
        with:
            tag_prefix: "v"
            major_pattern: "(MAJOR)"
            minor_pattern: "(MINOR)"
            version_format: ${major}.${minor}.${patch}
    outputs:
      version_tag: ${{ steps.generate-version.outputs.version_tag }}

  # Build job
  build:
    runs-on: ubuntu-latest
    # env:
    #   HUGO_VERSION: 0.128.0
    steps:
      - name: Fetch latest version of GoHugo
        id: go_hugo_version
        run: |
          echo HUGO_VERSION=`curl --silent "https://api.github.com/repos/gohugoio/hugo/releases/latest" | jq -r .tag_name | awk -v char="v" '{gsub(char,""); print}'` >> $GITHUB_ENV

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: America/Los_Angeles
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  release:
    if: github.event.pull_request.merged == true
    needs: [semantic-version, build]
    runs-on: ubuntu-latest
    env:
      TARGET_TAG: "${{ needs.semantic-version.outputs.version_tag }}"
    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ env.TARGET_TAG }}" \
              --repo="${GITHUB_REPOSITORY}" \
              --title="${{ env.TARGET_TAG }}" \
              --generate-notes \
              --notes "- Leaving note as an example of manual notes" || echo "Release already exists, proceeding to edit release notes" \
          gh release edit "${{ env.TARGET_TAG }}" \
              --repo="${GITHUB_REPOSITORY}" \
              --notes "- Leaving note as an example of manual notes"

      - name: Generate Summary
        if: always()
        run: |
          cat > $GITHUB_STEP_SUMMARY << EOL
          ## Create Release (Only generated when merging a PR to main)
          New Release ðŸ”—: [${{ env.TARGET_TAG }}](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ env.TARGET_TAG }})
          EOL

  # Deployment job
  deploy:
    if: github.event.pull_request.merged == true
    needs: [release]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
